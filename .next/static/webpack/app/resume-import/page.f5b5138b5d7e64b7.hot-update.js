"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/resume-import/page",{

/***/ "(app-client)/./src/app/lib/parse-resume-from-pdf/read-pdf.ts":
/*!*******************************************************!*\
  !*** ./src/app/lib/parse-resume-from-pdf/read-pdf.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"readPdf\": function() { return /* binding */ readPdf; }\n/* harmony export */ });\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdfjs-dist */ \"(app-client)/./node_modules/pdfjs-dist/build/pdf.js\");\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pdfjs_dist_build_pdf_worker_entry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pdfjs-dist/build/pdf.worker.entry */ \"(app-client)/./node_modules/pdfjs-dist/build/pdf.worker.entry.js\");\n/* harmony import */ var pdfjs_dist_build_pdf_worker_entry__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist_build_pdf_worker_entry__WEBPACK_IMPORTED_MODULE_1__);\n// Getting pdfjs to work is tricky. The following 3 lines would make it work\n// https://stackoverflow.com/a/63486898/7699841\n\n// @ts-ignore\n\npdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.GlobalWorkerOptions.workerSrc = (pdfjs_dist_build_pdf_worker_entry__WEBPACK_IMPORTED_MODULE_1___default());\nconst readPdf = async (fileUrl)=>{\n    const pdfFile = await pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.getDocument(fileUrl).promise;\n    let textItems = [];\n    for(let i = 1; i <= pdfFile.numPages; i++){\n        // Parse each page into text content\n        const page = await pdfFile.getPage(i);\n        const textContent = await page.getTextContent();\n        // Wait for font data to be loaded\n        await page.getOperatorList();\n        const commonObjs = page.commonObjs;\n        // Convert Pdfjs TextItem type to new TextItem type\n        const pageTextItems = textContent.items.map((item)=>{\n            const { str: text , dir , transform , fontName: pdfFontName , ...otherProps } = item;\n            const x = transform[4];\n            const y = transform[5];\n            // Use commonObjs to convert font name to original name (e.g. \"GVDLYI+Arial-BoldMT\")\n            // since non system font name by default is a loaded name, e.g. \"g_d8_f1\"\n            // Reference: https://github.com/mozilla/pdf.js/pull/15659\n            const fontObj = commonObjs.get(pdfFontName);\n            const fontName = fontObj.name;\n            // pdfjs reads a \"-\" as \"-­‐\" in the resume example. This is to revert it.\n            // Note \"-­‐\" is \"-&#x00AD;‐\" with a soft hyphen in between. It is not the same as \"--\"\n            const newText = text.replace(/-­‐/g, \"-\");\n            const newItem = {\n                ...otherProps,\n                fontName,\n                text: newText,\n                x,\n                y\n            };\n            return newItem;\n        });\n        // Some pdf's text items are not in order. This is most likely a result of creating it\n        // from design softwares, e.g. canvas. The commented out method can sort pageTextItems\n        // by y position to put them back in order. But it is not used since it might be more\n        // helpful to let users know that the pdf is not in order.\n        // pageTextItems.sort((a, b) => Math.round(b.y) - Math.round(a.y));\n        // Add text items of each page to total\n        textItems.push(...pageTextItems);\n    }\n    // Filter out empty space textItem noise\n    const isEmptySpace = (textItem)=>!textItem.hasEOL && textItem.text.trim() === \"\";\n    textItems = textItems.filter((textItem)=>!isEmptySpace(textItem));\n    return textItems;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vc3JjL2FwcC9saWIvcGFyc2UtcmVzdW1lLWZyb20tcGRmL3JlYWQtcGRmLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsNEVBQTRFO0FBQzVFLCtDQUErQztBQUNYO0FBQ3BDLGFBQWE7QUFDK0M7QUFDNURBLHFFQUFtQ0csR0FBR0YsMEVBQVdBO0FBTTFDLE1BQU1HLFVBQVUsT0FBT0M7SUFDNUIsTUFBTUMsVUFBVSxNQUFNTixtREFBaUJPLENBQUNGLFNBQVNHO0lBQ2pELElBQUlDLFlBQXVCLEVBQUU7SUFFN0IsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUtKLFFBQVFLLFVBQVVELElBQUs7UUFDMUMsb0NBQW9DO1FBQ3BDLE1BQU1FLE9BQU8sTUFBTU4sUUFBUU8sUUFBUUg7UUFDbkMsTUFBTUksY0FBYyxNQUFNRixLQUFLRztRQUUvQixrQ0FBa0M7UUFDbEMsTUFBTUgsS0FBS0k7UUFDWCxNQUFNQyxhQUFhTCxLQUFLSztRQUV4QixtREFBbUQ7UUFDbkQsTUFBTUMsZ0JBQWdCSixZQUFZSyxNQUFNQyxJQUFJLENBQUNDO1lBQzNDLE1BQU0sRUFDSkMsS0FBS0MsS0FBSSxFQUNUQyxJQUFHLEVBQ0hDLFVBQVMsRUFDVEMsVUFBVUMsWUFBVyxFQUNyQixHQUFHQyxZQUNKLEdBQUdQO1lBRUosTUFBTVEsSUFBSUosU0FBUyxDQUFDLEVBQUU7WUFDdEIsTUFBTUssSUFBSUwsU0FBUyxDQUFDLEVBQUU7WUFFdEIsb0ZBQW9GO1lBQ3BGLHlFQUF5RTtZQUN6RSwwREFBMEQ7WUFDMUQsTUFBTU0sVUFBVWQsV0FBV2UsSUFBSUw7WUFDL0IsTUFBTUQsV0FBV0ssUUFBUUU7WUFFekIsMEVBQTBFO1lBQzFFLHVGQUF1RjtZQUN2RixNQUFNQyxVQUFVWCxLQUFLWSxRQUFRLFFBQVE7WUFFckMsTUFBTUMsVUFBVTtnQkFDZCxHQUFHUixVQUFVO2dCQUNiRjtnQkFDQUgsTUFBTVc7Z0JBQ05MO2dCQUNBQztZQUNGO1lBQ0EsT0FBT007UUFDVDtRQUVBLHNGQUFzRjtRQUN0RixzRkFBc0Y7UUFDdEYscUZBQXFGO1FBQ3JGLDBEQUEwRDtRQUMxRCxtRUFBbUU7UUFFbkUsdUNBQXVDO1FBQ3ZDM0IsVUFBVTRCLFFBQVFuQjtJQUNwQjtJQUVBLHdDQUF3QztJQUN4QyxNQUFNb0IsZUFBZSxDQUFDQyxXQUNwQixDQUFDQSxTQUFTQyxVQUFVRCxTQUFTaEIsS0FBS2tCLFdBQVc7SUFDL0NoQyxZQUFZQSxVQUFVaUMsT0FBTyxDQUFDSCxXQUFhLENBQUNELGFBQWFDO0lBRXpELE9BQU85QjtBQUNULEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9saWIvcGFyc2UtcmVzdW1lLWZyb20tcGRmL3JlYWQtcGRmLnRzP2UxMWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2V0dGluZyBwZGZqcyB0byB3b3JrIGlzIHRyaWNreS4gVGhlIGZvbGxvd2luZyAzIGxpbmVzIHdvdWxkIG1ha2UgaXQgd29ya1xyXG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNjM0ODY4OTgvNzY5OTg0MVxyXG5pbXBvcnQgKiBhcyBwZGZqcyBmcm9tIFwicGRmanMtZGlzdFwiO1xyXG4vLyBAdHMtaWdub3JlXHJcbmltcG9ydCBwZGZqc1dvcmtlciBmcm9tIFwicGRmanMtZGlzdC9idWlsZC9wZGYud29ya2VyLmVudHJ5XCI7XHJcbnBkZmpzLkdsb2JhbFdvcmtlck9wdGlvbnMud29ya2VyU3JjID0gcGRmanNXb3JrZXI7XHJcblxyXG5pbXBvcnQgdHlwZSB7IFRleHRJdGVtIGFzIFBkZmpzVGV4dEl0ZW0gfSBmcm9tIFwicGRmanMtZGlzdC90eXBlcy9zcmMvZGlzcGxheS9hcGlcIjtcclxuaW1wb3J0IHR5cGUgeyBUZXh0SXRlbSwgVGV4dEl0ZW1zIH0gZnJvbSBcImxpYi9wYXJzZS1yZXN1bWUtZnJvbS1wZGYvdHlwZXNcIjtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcmVhZFBkZiA9IGFzeW5jIChmaWxlVXJsOiBzdHJpbmcpOiBQcm9taXNlPFRleHRJdGVtcz4gPT4ge1xyXG4gIGNvbnN0IHBkZkZpbGUgPSBhd2FpdCBwZGZqcy5nZXREb2N1bWVudChmaWxlVXJsKS5wcm9taXNlO1xyXG4gIGxldCB0ZXh0SXRlbXM6IFRleHRJdGVtcyA9IFtdO1xyXG5cclxuICBmb3IgKGxldCBpID0gMTsgaSA8PSBwZGZGaWxlLm51bVBhZ2VzOyBpKyspIHtcclxuICAgIC8vIFBhcnNlIGVhY2ggcGFnZSBpbnRvIHRleHQgY29udGVudFxyXG4gICAgY29uc3QgcGFnZSA9IGF3YWl0IHBkZkZpbGUuZ2V0UGFnZShpKTtcclxuICAgIGNvbnN0IHRleHRDb250ZW50ID0gYXdhaXQgcGFnZS5nZXRUZXh0Q29udGVudCgpO1xyXG5cclxuICAgIC8vIFdhaXQgZm9yIGZvbnQgZGF0YSB0byBiZSBsb2FkZWRcclxuICAgIGF3YWl0IHBhZ2UuZ2V0T3BlcmF0b3JMaXN0KCk7XHJcbiAgICBjb25zdCBjb21tb25PYmpzID0gcGFnZS5jb21tb25PYmpzO1xyXG5cclxuICAgIC8vIENvbnZlcnQgUGRmanMgVGV4dEl0ZW0gdHlwZSB0byBuZXcgVGV4dEl0ZW0gdHlwZVxyXG4gICAgY29uc3QgcGFnZVRleHRJdGVtcyA9IHRleHRDb250ZW50Lml0ZW1zLm1hcCgoaXRlbSkgPT4ge1xyXG4gICAgICBjb25zdCB7XHJcbiAgICAgICAgc3RyOiB0ZXh0LFxyXG4gICAgICAgIGRpciwgLy8gUmVtb3ZlIHRleHQgZGlyZWN0aW9uXHJcbiAgICAgICAgdHJhbnNmb3JtLFxyXG4gICAgICAgIGZvbnROYW1lOiBwZGZGb250TmFtZSxcclxuICAgICAgICAuLi5vdGhlclByb3BzXHJcbiAgICAgIH0gPSBpdGVtIGFzIFBkZmpzVGV4dEl0ZW07XHJcblxyXG4gICAgICBjb25zdCB4ID0gdHJhbnNmb3JtWzRdO1xyXG4gICAgICBjb25zdCB5ID0gdHJhbnNmb3JtWzVdO1xyXG5cclxuICAgICAgLy8gVXNlIGNvbW1vbk9ianMgdG8gY29udmVydCBmb250IG5hbWUgdG8gb3JpZ2luYWwgbmFtZSAoZS5nLiBcIkdWRExZSStBcmlhbC1Cb2xkTVRcIilcclxuICAgICAgLy8gc2luY2Ugbm9uIHN5c3RlbSBmb250IG5hbWUgYnkgZGVmYXVsdCBpcyBhIGxvYWRlZCBuYW1lLCBlLmcuIFwiZ19kOF9mMVwiXHJcbiAgICAgIC8vIFJlZmVyZW5jZTogaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvcGRmLmpzL3B1bGwvMTU2NTlcclxuICAgICAgY29uc3QgZm9udE9iaiA9IGNvbW1vbk9ianMuZ2V0KHBkZkZvbnROYW1lKTtcclxuICAgICAgY29uc3QgZm9udE5hbWUgPSBmb250T2JqLm5hbWU7XHJcblxyXG4gICAgICAvLyBwZGZqcyByZWFkcyBhIFwiLVwiIGFzIFwiLcKt4oCQXCIgaW4gdGhlIHJlc3VtZSBleGFtcGxlLiBUaGlzIGlzIHRvIHJldmVydCBpdC5cclxuICAgICAgLy8gTm90ZSBcIi3CreKAkFwiIGlzIFwiLSYjeDAwQUQ74oCQXCIgd2l0aCBhIHNvZnQgaHlwaGVuIGluIGJldHdlZW4uIEl0IGlzIG5vdCB0aGUgc2FtZSBhcyBcIi0tXCJcclxuICAgICAgY29uc3QgbmV3VGV4dCA9IHRleHQucmVwbGFjZSgvLcKt4oCQL2csIFwiLVwiKTtcclxuXHJcbiAgICAgIGNvbnN0IG5ld0l0ZW0gPSB7XHJcbiAgICAgICAgLi4ub3RoZXJQcm9wcyxcclxuICAgICAgICBmb250TmFtZSxcclxuICAgICAgICB0ZXh0OiBuZXdUZXh0LFxyXG4gICAgICAgIHgsXHJcbiAgICAgICAgeSxcclxuICAgICAgfTtcclxuICAgICAgcmV0dXJuIG5ld0l0ZW07XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBTb21lIHBkZidzIHRleHQgaXRlbXMgYXJlIG5vdCBpbiBvcmRlci4gVGhpcyBpcyBtb3N0IGxpa2VseSBhIHJlc3VsdCBvZiBjcmVhdGluZyBpdFxyXG4gICAgLy8gZnJvbSBkZXNpZ24gc29mdHdhcmVzLCBlLmcuIGNhbnZhcy4gVGhlIGNvbW1lbnRlZCBvdXQgbWV0aG9kIGNhbiBzb3J0IHBhZ2VUZXh0SXRlbXNcclxuICAgIC8vIGJ5IHkgcG9zaXRpb24gdG8gcHV0IHRoZW0gYmFjayBpbiBvcmRlci4gQnV0IGl0IGlzIG5vdCB1c2VkIHNpbmNlIGl0IG1pZ2h0IGJlIG1vcmVcclxuICAgIC8vIGhlbHBmdWwgdG8gbGV0IHVzZXJzIGtub3cgdGhhdCB0aGUgcGRmIGlzIG5vdCBpbiBvcmRlci5cclxuICAgIC8vIHBhZ2VUZXh0SXRlbXMuc29ydCgoYSwgYikgPT4gTWF0aC5yb3VuZChiLnkpIC0gTWF0aC5yb3VuZChhLnkpKTtcclxuXHJcbiAgICAvLyBBZGQgdGV4dCBpdGVtcyBvZiBlYWNoIHBhZ2UgdG8gdG90YWxcclxuICAgIHRleHRJdGVtcy5wdXNoKC4uLnBhZ2VUZXh0SXRlbXMpO1xyXG4gIH1cclxuXHJcbiAgLy8gRmlsdGVyIG91dCBlbXB0eSBzcGFjZSB0ZXh0SXRlbSBub2lzZVxyXG4gIGNvbnN0IGlzRW1wdHlTcGFjZSA9ICh0ZXh0SXRlbTogVGV4dEl0ZW0pID0+XHJcbiAgICAhdGV4dEl0ZW0uaGFzRU9MICYmIHRleHRJdGVtLnRleHQudHJpbSgpID09PSBcIlwiO1xyXG4gIHRleHRJdGVtcyA9IHRleHRJdGVtcy5maWx0ZXIoKHRleHRJdGVtKSA9PiAhaXNFbXB0eVNwYWNlKHRleHRJdGVtKSk7XHJcblxyXG4gIHJldHVybiB0ZXh0SXRlbXM7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJwZGZqcyIsInBkZmpzV29ya2VyIiwiR2xvYmFsV29ya2VyT3B0aW9ucyIsIndvcmtlclNyYyIsInJlYWRQZGYiLCJmaWxlVXJsIiwicGRmRmlsZSIsImdldERvY3VtZW50IiwicHJvbWlzZSIsInRleHRJdGVtcyIsImkiLCJudW1QYWdlcyIsInBhZ2UiLCJnZXRQYWdlIiwidGV4dENvbnRlbnQiLCJnZXRUZXh0Q29udGVudCIsImdldE9wZXJhdG9yTGlzdCIsImNvbW1vbk9ianMiLCJwYWdlVGV4dEl0ZW1zIiwiaXRlbXMiLCJtYXAiLCJpdGVtIiwic3RyIiwidGV4dCIsImRpciIsInRyYW5zZm9ybSIsImZvbnROYW1lIiwicGRmRm9udE5hbWUiLCJvdGhlclByb3BzIiwieCIsInkiLCJmb250T2JqIiwiZ2V0IiwibmFtZSIsIm5ld1RleHQiLCJyZXBsYWNlIiwibmV3SXRlbSIsInB1c2giLCJpc0VtcHR5U3BhY2UiLCJ0ZXh0SXRlbSIsImhhc0VPTCIsInRyaW0iLCJmaWx0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./src/app/lib/parse-resume-from-pdf/read-pdf.ts\n"));

/***/ })

});